apiVersion: v1
kind: ConfigMap
metadata:
  name: sonos-web-config
  namespace: mediaserver
data:
  settings.json: |
    { "port": 30801, "cacheDir": "./cache" }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    mediaserver-app: sonos-web-controller
  name: sonos-web-controller
  namespace: mediaserver
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      mediaserver-app: sonos-web-controller
  template:
    metadata:
      labels:
        mediaserver-app: sonos-web-controller
    spec:
      hostNetwork: true
      containers:
      - image: carlosedp/sonos-web-controller:latest
        name: sonos-web-controller
        ports:
        - containerPort: 30801
        volumeMounts:
        - mountPath: /usr/src/app/settings.json
          subPath: settings.json
          name: sonos-web-config
      restartPolicy: Always
      volumes:
        - name: sonos-web-config
          configMap:
             name: sonos-web-config
             items:
              - key: settings.json
                path:  settings.json
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    mediaserver-app: sonos-web-controller 
  name: sonos-web-controller
  namespace: mediaserver
spec:
  ports:
  - name: web
    port: 30801
    targetPort: 30801
  selector:
    mediaserver-app: sonos-web-controller
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sonos-web-controller
  namespace: mediaserver
  annotations:
    traefik.frontend.rule.type: PathPrefix
spec:
  rules:
  - host: sonos.internal.carlosedp.com
    http:
      paths:
      - path: /
        backend:
          serviceName: sonos-web-controller
          servicePort: web

